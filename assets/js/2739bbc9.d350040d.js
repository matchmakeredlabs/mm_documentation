"use strict";(self.webpackChunkuser_documentation=self.webpackChunkuser_documentation||[]).push([[318],{602:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>h});const s=JSON.parse('{"id":"knowledge_mgmt/comments","title":"/comments","description":"This endpoint allows you to create, get, update, and delete comments on Palet statements.","source":"@site/api/knowledge_mgmt/comments.mdx","sourceDirName":"knowledge_mgmt","slug":"/comments","permalink":"/mm_documentation/api/comments","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"/comments","slug":"/comments"},"sidebar":"apiSidebar","previous":{"title":"/collections","permalink":"/mm_documentation/api/collections"},"next":{"title":"/settings","permalink":"/mm_documentation/api/settings"}}');var r=t(4848),a=t(8453),i=t(1470),d=t(9365);const l={title:"/comments",slug:"/comments"},c="/comments",o={},h=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"GET - All Comments",id:"get---all-comments",level:2},{value:"Endpoint",id:"endpoint",level:3},{value:"Request",id:"request",level:3},{value:"Request Parameters",id:"request-parameters",level:4},{value:"Sample Request",id:"sample-request",level:4},{value:"Response",id:"response",level:3},{value:"Response Parameters",id:"response-parameters",level:4},{value:"Example Response",id:"example-response",level:4},{value:"GET - Comment by ID",id:"get---comment-by-id",level:2},{value:"Endpoint",id:"endpoint-1",level:3},{value:"Notes",id:"notes",level:3},{value:"Request",id:"request-1",level:3},{value:"Path Parameters",id:"path-parameters",level:4},{value:"Sample Request",id:"sample-request-1",level:4},{value:"Response",id:"response-1",level:3},{value:"Response Parameters",id:"response-parameters-1",level:4},{value:"Example Response",id:"example-response-1",level:4},{value:"POST - Create Comment",id:"post---create-comment",level:2},{value:"Endpoint",id:"endpoint-2",level:3},{value:"Request",id:"request-2",level:3},{value:"Request Body",id:"request-body",level:4},{value:"Request Parameters",id:"request-parameters-1",level:4},{value:"Sample Request",id:"sample-request-2",level:4},{value:"Response",id:"response-2",level:3},{value:"Response Parameters",id:"response-parameters-2",level:4},{value:"Example Response",id:"example-response-2",level:4},{value:"PUT - Update Comment",id:"put---update-comment",level:2},{value:"Endpoint",id:"endpoint-3",level:3},{value:"Notes",id:"notes-1",level:3},{value:"Request",id:"request-3",level:3},{value:"Request Body",id:"request-body-1",level:4},{value:"Request Parameters",id:"request-parameters-2",level:4},{value:"Sample Request",id:"sample-request-3",level:4},{value:"Response",id:"response-3",level:3},{value:"Response Parameters",id:"response-parameters-3",level:4},{value:"Example Response",id:"example-response-3",level:4},{value:"DELETE - Remove Comment",id:"delete---remove-comment",level:2},{value:"Endpoint",id:"endpoint-4",level:3},{value:"Notes",id:"notes-2",level:3},{value:"Request",id:"request-4",level:3},{value:"Path Parameters",id:"path-parameters-1",level:4},{value:"Sample Request",id:"sample-request-4",level:4},{value:"Response",id:"response-4",level:3},{value:"Response Parameters",id:"response-parameters-4",level:4},{value:"Example Response",id:"example-response-4",level:4}];function m(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"comments",children:"/comments"})}),"\n",(0,r.jsx)(n.p,{children:"This endpoint allows you to create, get, update, and delete comments on Palet statements."}),"\n",(0,r.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Endpoint"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"#get---all-comments",children:"GET - All Comments"})}),(0,r.jsx)(n.td,{children:"Retrieve all palet statement comments."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"#get---comment-by-id",children:"GET - Comment by ID"})}),(0,r.jsx)(n.td,{children:"Retrieve a specific comment by its ID."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"#post---create-comment",children:"POST - Create Comment"})}),(0,r.jsx)(n.td,{children:"Create a new comment."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"#put---update-comment",children:"PUT - Update Comment"})}),(0,r.jsx)(n.td,{children:"Update a preexisting comment by its ID."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"#delete---remove-comment",children:"DELETE"})}),(0,r.jsx)(n.td,{children:"Delete a specific comment by its ID."})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"get---all-comments",children:"GET - All Comments"}),"\n",(0,r.jsx)(n.h3,{id:"endpoint",children:"Endpoint"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"GET https://matchmakeredlabs.net/api/comments\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Notes:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Returns all comments if caller has system-wide admin ",(0,r.jsx)(n.code,{children:"ReadDescriptor"})," privilege (for now)"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"request",children:"Request"}),"\n",(0,r.jsx)(n.h4,{id:"request-parameters",children:"Request Parameters"}),"\n",(0,r.jsx)(n.p,{children:"None required."}),"\n",(0,r.jsx)(n.h4,{id:"sample-request",children:"Sample Request"}),"\n",(0,r.jsxs)(i.A,{groupId:"get_all_comments",defaultValue:"curl",values:[{label:"cURL",value:"curl"},{label:"JavaScript",value:"js"},{label:"Python",value:"python"}],children:[(0,r.jsx)(d.A,{value:"curl",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-curl",children:'curl \\\n-H "Authorization: Bearer $TOKEN" \\\n-X GET "https://matchmakeredlabs.net/api/comments"\n'})})}),(0,r.jsx)(d.A,{value:"js",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'async function getComments() {\n    const response = await fetch("https://matchmakeredlabs.net/api/comments", {\n        method: "GET",\n        headers: {\n            \'Authorization\': `Bearer ${TOKEN}`\n        }\n    });\n    return response.json();\n}\n\ngetComments().then(data => console.log(data));\n'})})}),(0,r.jsx)(d.A,{value:"python",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"import requests\n\ntoken = \"<your_token>\"\nurl = 'https://matchmakeredlabs.net/api/comments'\nheaders = {\n    'Authorization': f\"Bearer {token}\"\n}\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n"})})})]}),"\n",(0,r.jsx)(n.h3,{id:"response",children:"Response"}),"\n",(0,r.jsx)(n.h4,{id:"response-parameters",children:"Response Parameters"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"id"})}),(0,r.jsx)(n.td,{children:"uuid"}),(0,r.jsx)(n.td,{children:"UUID for comment about specific Palet statement(s)."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"type"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:'Always "comment"'})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"requestedAction"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"One of add, delete, split, or merge."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"comment"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"The information provided in the comment"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"commentAbout"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Always paletStatements for now."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"descriptor"})}),(0,r.jsx)(n.td,{children:"object"}),(0,r.jsx)(n.td,{children:"Array of user/group IDs."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"statements"})}),(0,r.jsx)(n.td,{children:"array"}),(0,r.jsx)(n.td,{children:"Palet statements that this comment is abou.t"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"_orgId"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Organization of the collection that the descriptor is in."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"descriptorId"})}),(0,r.jsx)(n.td,{children:"uuid"}),(0,r.jsx)(n.td,{children:"ID field of descriptor object."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"statementIds"})}),(0,r.jsx)(n.td,{children:"array"}),(0,r.jsx)(n.td,{children:"String array of the ID fields of each object in the statements array."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"userId"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"User ID of the person who created the comment."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"_canUpdate"})}),(0,r.jsx)(n.td,{children:"boolean"}),(0,r.jsx)(n.td,{children:"True if the user has permission to update the comment, false if not."})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"example-response",children:"Example Response"}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)("summary",{children:"Example Response"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "items": [\n    {\n      "id": "4470ca36-a792-467f-8293-8072fbffdfbe",\n      "type": "comment",\n      "requestedAction": "add",\n      "comment": "Test add comment",\n      "commentAbout": "paletStatements",\n      "descriptor": {\n        "id": "7beda6ef-4568-421d-bba3-3db5ea94eaad",\n        "eleType": "lr",\n        "name": "test name",\n        "url": "urn:test",\n        "subject": "",\n        "description": "co",\n        "identifier": "",\n        "educationalLevel": "",\n        "creator": "",\n        "provenance": "",\n        "key": "https://palet.codes/key/5553C-10481C",\n        "mainEntity": "test",\n        "mainEntityId": "5a0ecf28-9ba2-42aa-8dea-273572987614",\n        "isPartOf": "testCollection",\n        "isPartOfId": "52093ec2-3308-4fd6-be5b-bc4ad32a1cf0",\n        "_leafCount": 1,\n        "_leafWithKeyCount": 1,\n        "_isLeaf": true,\n        "_public": false,\n        "_orgId": "testorg",\n        "datePublished": "",\n        "sdDatePublished": "",\n        "_canUpdate": true,\n        "leafCount": 1,\n        "leafWithKeyCount": 1\n      },\n      "statements": [\n        {\n          "id": "5553",\n          "rel": "Central",\n          "int": "Intentional",\n          "stmtType": "STFk",\n          "statement": "Palet Statement 1"\n        }\n      ],\n      "userId": "testuser",\n      "_orgId": "testorg",\n      "descriptorId": "7beda6ef-4568-421d-bba3-3db5ea94eaad",\n      "statementIds": [\n        "5553"\n      ],\n      "_canUpdate": true\n    },\n    {\n      "id": "4470ca36-a792-467f-8293-8072fbffdfbe",\n      "type": "comment",\n      "requestedAction": "delete",\n      "comment": "Test delete comment",\n      "commentAbout": "paletStatements",\n      "descriptor": {\n        "id": "7beda6ef-4568-421d-bba3-3db5ea94eaad",\n        "eleType": "lr",\n        "name": "test name",\n        "url": "urn:test",\n        "subject": "",\n        "description": "co",\n        "identifier": "",\n        "educationalLevel": "",\n        "creator": "",\n        "provenance": "",\n        "key": "https://palet.codes/key/5553C-10481C",\n        "mainEntity": "test",\n        "mainEntityId": "5a0ecf28-9ba2-42aa-8dea-273572987614",\n        "isPartOf": "testCollection",\n        "isPartOfId": "52093ec2-3308-4fd6-be5b-bc4ad32a1cf0",\n        "_leafCount": 1,\n        "_leafWithKeyCount": 1,\n        "_isLeaf": true,\n        "_public": false,\n        "_orgId": "testorg",\n        "datePublished": "",\n        "sdDatePublished": "",\n        "_canUpdate": true,\n        "leafCount": 1,\n        "leafWithKeyCount": 1\n      },\n      "statements": [\n        {\n          "id": "5553",\n          "rel": "Central",\n          "int": "Intentional",\n          "stmtType": "STFk",\n          "statement": "Palet Statement 1"\n        },\n        {\n          "id": "5554",\n          "rel": "Central",\n          "int": "Intentional",\n          "stmtType": "STFk",\n          "statement": "Palet Statement 2"\n        }\n      ],\n      "userId": "testuser",\n      "_orgId": "testorg",\n      "descriptorId": "7beda6ef-4568-421d-bba3-3db5ea94eaad",\n      "statementIds": [\n        "5553",\n        "5554"\n      ],\n      "_canUpdate": true\n    }\n  ]\n}\n'})})]}),"\n",(0,r.jsx)(n.h2,{id:"get---comment-by-id",children:"GET - Comment by ID"}),"\n",(0,r.jsx)(n.h3,{id:"endpoint-1",children:"Endpoint"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"GET https://matchmakeredlabs.net/api/comments/{commentId}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"notes",children:"Notes"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Returns a specific comment by UUID if caller has system-wide admin ",(0,r.jsx)(n.code,{children:"ReadDescriptor"})," privilege (for now)"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"request-1",children:"Request"}),"\n",(0,r.jsx)(n.h4,{id:"path-parameters",children:"Path Parameters"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Required"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"commentId"})}),(0,r.jsx)(n.td,{children:"uuid"}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsx)(n.td,{children:"UUID of a specific comment about a Palet statement."})]})})]}),"\n",(0,r.jsx)(n.h4,{id:"sample-request-1",children:"Sample Request"}),"\n",(0,r.jsxs)(i.A,{groupId:"get_comment_by_id",defaultValue:"curl",values:[{label:"cURL",value:"curl"},{label:"JavaScript",value:"js"},{label:"Python",value:"python"}],children:[(0,r.jsx)(d.A,{value:"curl",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-curl",children:'curl \\\n-H "Authorization: Bearer $TOKEN" \\\n-X GET "https://matchmakeredlabs.net/api/comments/comment123"\n'})})}),(0,r.jsx)(d.A,{value:"js",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'async function getComment(commentId) {\n    const response = await fetch(`https://matchmakeredlabs.net/api/comments/${commentId}`, {\n        method: "GET",\n        headers: {\n            \'Authorization\': `Bearer ${TOKEN}`\n        }\n    });\n    return response.json();\n}\n\ngetComment("comment123").then(data => console.log(data));\n'})})}),(0,r.jsx)(d.A,{value:"python",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'import requests\n\ntoken = "<your_token>"\ncomment_id = "comment123"\nurl = f\'https://matchmakeredlabs.net/api/comments/{comment_id}\'\nheaders = {\n    \'Authorization\': f"Bearer {token}"\n}\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n'})})})]}),"\n",(0,r.jsx)(n.h3,{id:"response-1",children:"Response"}),"\n",(0,r.jsx)(n.h4,{id:"response-parameters-1",children:"Response Parameters"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"id"})}),(0,r.jsx)(n.td,{children:"uuid"}),(0,r.jsx)(n.td,{children:"UUID for comment about specific Palet statement(s)."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"type"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:'Always "comment"'})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"requestedAction"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"One of add, delete, split, or merge."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"comment"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"The information provided in the comment"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"commentAbout"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Always paletStatements for now."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"descriptor"})}),(0,r.jsx)(n.td,{children:"object"}),(0,r.jsx)(n.td,{children:"Array of user/group IDs."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"statements"})}),(0,r.jsx)(n.td,{children:"array"}),(0,r.jsx)(n.td,{children:"Palet statements that this comment is abou.t"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"_orgId"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Organization of the collection that the descriptor is in."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"descriptorId"})}),(0,r.jsx)(n.td,{children:"uuid"}),(0,r.jsx)(n.td,{children:"ID field of descriptor object."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"statementIds"})}),(0,r.jsx)(n.td,{children:"array"}),(0,r.jsx)(n.td,{children:"String array of the ID fields of each object in the statements array."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"userId"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"User ID of the person who created the comment."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"_canUpdate"})}),(0,r.jsx)(n.td,{children:"boolean"}),(0,r.jsx)(n.td,{children:"True if the user has permission to update the comment, false if not."})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"example-response-1",children:"Example Response"}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)("summary",{children:"Example Response"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n    "id": "comment123",\n    "type": "comment",\n    "requestedAction": "delete",\n    "comment": "Test delete comment",\n    "commentAbout": "paletStatements",\n    "descriptor": {\n      "id": "7beda6ef-4568-421d-bba3-3db5ea94eaad",\n      "eleType": "lr",\n      "name": "test name",\n      "url": "urn:test",\n      "subject": "",\n      "description": "co",\n      "identifier": "",\n      "educationalLevel": "",\n      "creator": "",\n      "provenance": "",\n      "key": "https://palet.codes/key/5553C-10481C",\n      "mainEntity": "test",\n      "mainEntityId": "5a0ecf28-9ba2-42aa-8dea-273572987614",\n      "isPartOf": "testCollection",\n      "isPartOfId": "52093ec2-3308-4fd6-be5b-bc4ad32a1cf0",\n      "_leafCount": 1,\n      "_leafWithKeyCount": 1,\n      "_isLeaf": true,\n      "_public": false,\n      "_orgId": "testorg",\n      "datePublished": "",\n      "sdDatePublished": "",\n      "_canUpdate": true,\n      "leafCount": 1,\n      "leafWithKeyCount": 1\n    },\n    "statements": [\n    {\n        "id": "5553",\n        "rel": "Central",\n        "int": "Intentional",\n        "stmtType": "STFk",\n        "statement": "Palet Statement 1"\n    },\n    {\n        "id": "5554",\n        "rel": "Central",\n        "int": "Intentional",\n        "stmtType": "STFk",\n        "statement": "Palet Statement 2"\n    }\n    ],\n    "userId": "testuser",\n    "_orgId": "testorg",\n    "descriptorId": "7beda6ef-4568-421d-bba3-3db5ea94eaad",\n    "statementIds": [\n    "5553",\n    "5554"\n    ],\n    "_canUpdate": true\n}\n'})})]}),"\n",(0,r.jsx)(n.h2,{id:"post---create-comment",children:"POST - Create Comment"}),"\n",(0,r.jsx)(n.h3,{id:"endpoint-2",children:"Endpoint"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"POST https://matchmakeredlabs.net/api/comments\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Notes:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Can be done by anybody with ",(0,r.jsx)(n.code,{children:"WriteDescriptor"})," privilege on a particular descriptor."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"request-2",children:"Request"}),"\n",(0,r.jsx)(n.h4,{id:"request-body",children:"Request Body"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "id": "Include this field if you want to be able to easily update a comment."\n  "comment": "This is a sample comment",\n  "commentAbout": "paletStatements",\n  "descriptor": {\n    "_canUpdate": true,\n    "_isLeaf": true,\n    "_leafCount": 1,\n    "_leafWithKeyCount": 1,\n    "_orgId": "testorg",\n    "_public": false,\n    "creator": "",\n    "datePublished": "",\n    "description": "co",\n    "educationalLevel": "",\n    "eleType": "lr",\n    "id": "7beda6ef-4568-421d-bba3-3db5ea94eaad",\n    "identifier": "",\n    "isPartOf": "testCollection",\n    "isPartOfId": "52093ec2-3308-4fd6-be5b-bc4ad32a1cf0",\n    "key": "https://palet.codes/key/5553C-10481C",\n    "leafCount": 1,\n    "leafWithKeyCount": 1,\n    "mainEntity": "test",\n    "mainEntityId": "5a0ecf28-9ba2-42aa-8dea-273572987614",\n    "name": "crazy",\n    "provenance": "",\n    "sdDatePublished": "",\n    "subject": "",\n    "url": "urn:test"\n  },\n  "statements": [\n    {\n      "id": "5553",\n      "int": "Intentional",\n      "rel": "Central",\n      "statement": "Defining the trigonometric ratios sine (sin), cosine (cos) and tangent (tan) in terms of the sides of a right triangle.",\n      "stmtType": "STFk"\n    }\n  ]\n}\n'})}),"\n",(0,r.jsx)(n.h4,{id:"request-parameters-1",children:"Request Parameters"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Required"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"id"})}),(0,r.jsx)(n.td,{children:"uuid/string"}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"UUID/string ID for comment about specific Palet statement(s)."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"comment"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsx)(n.td,{children:"The information provided in the comment"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"commentAbout"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsx)(n.td,{children:"Always paletStatements (for now)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"descriptor"})}),(0,r.jsx)(n.td,{children:"object"}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsx)(n.td,{children:"Descriptor relating to this comment"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"statements"})}),(0,r.jsx)(n.td,{children:"array"}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsx)(n.td,{children:"Palet statements that this comment is about"})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"sample-request-2",children:"Sample Request"}),"\n",(0,r.jsxs)(i.A,{groupId:"create_comment",defaultValue:"curl",values:[{label:"cURL",value:"curl"},{label:"JavaScript",value:"js"},{label:"Python",value:"python"}],children:[(0,r.jsx)(d.A,{value:"curl",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-curl",children:'curl \\\n-H "Authorization: Bearer $TOKEN" \\\n-H "Content-Type: application/json" \\\n-d \'{"comment":"test",\n      "commentAbout":"paletStatements",\n      "descriptor": {\n        "_canUpdate": true,\n        "_isLeaf": true,\n        "_leafCount": 1,\n        "_leafWithKeyCount": 1,\n        "_orgId": "testorg",\n        "_public": false,\n        "creator": "",\n        "datePublished": "",\n        "description": "co",\n        "educationalLevel": "",\n        "eleType": "lr",\n        "id": "7beda6ef-4568-421d-bba3-3db5ea94eaad",\n        "identifier": "",\n        "isPartOf": "testCollection",\n        "isPartOfId": "52093ec2-3308-4fd6-be5b-bc4ad32a1cf0",\n        "key": "https://palet.codes/key/5553C-10481C",\n        "leafCount": 1,\n        "leafWithKeyCount": 1,\n        "mainEntity": "test",\n        "mainEntityId": "5a0ecf28-9ba2-42aa-8dea-273572987614",\n        "name": "crazy",\n        "provenance": "",\n        "sdDatePublished": "",\n        "subject": "",\n        "url": "urn:test"\n      },\n      "statements": {\n        "id": "5553",\n        "int": "Intentional",\n        "rel": "Central",\n        "statement": "Defining the trigonometric ratios sine (sin), cosine (cos) and tangent (tan) in terms of the sides of a right triangle.",\n        "stmtType": "STFk"\n      }}\' \\\n-X POST "https://matchmakeredlabs.net/api/comments"\n'})})}),(0,r.jsx)(d.A,{value:"js",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'async function createComment() {\n    const response = await fetch("https://matchmakeredlabs.net/api/comments", {\n        method: "POST",\n        headers: {\n            \'Content-Type\': \'application/json\',\n            \'Authorization\': `Bearer ${TOKEN}`\n        },\n        body: JSON.stringify({\n            comment: "test",\n            commentAbout: "paletStatements",\n            descriptor: {\n              _canUpdate: true,\n              _isLeaf: true,\n              _leafCount: 1,\n              _leafWithKeyCount: 1,\n              _orgId: "testorg",\n              _public: false,\n              creator: "",\n              datePublished: "",\n              description: "co",\n              educationalLevel: "",\n              eleType: "lr",\n              id: "7beda6ef-4568-421d-bba3-3db5ea94eaad",\n              identifier: "",\n              isPartOf: "testCollection",\n              isPartOfId: "52093ec2-3308-4fd6-be5b-bc4ad32a1cf0",\n              key: "https://palet.codes/key/5553C-10481C",\n              leafCount: 1,\n              leafWithKeyCount: 1,\n              mainEntity: "test",\n              mainEntityId: "5a0ecf28-9ba2-42aa-8dea-273572987614",\n              name: "crazy",\n              provenance: "",\n              sdDatePublished: "",\n              subject: "",\n              url: "urn:test"\n            },\n            statements: {\n              id: "5553",\n              int: "Intentional",\n              rel: "Central",\n              statement: "Defining the trigonometric ratios sine (sin), cosine (cos) and tangent (tan) in terms of the sides of a right triangle.",\n              stmtType: "STFk"\n            }\n        })\n    });\n    return response.json();\n}\n\ncreateComment().then(data => console.log(data));\n'})})}),(0,r.jsx)(d.A,{value:"python",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'import requests\n\ntoken = "<your_token>"\nurl = \'https://matchmakeredlabs.net/api/comments\'\nheaders = {\n    \'Content-Type\': \'application/json\',\n    \'Authorization\': f"Bearer {token}"\n}\ndata = {\n    "comment": "test",\n    "commentAbout": "paletStatements",\n    "descriptor": {\n      "_canUpdate": true,\n      "_isLeaf": true,\n      "_leafCount": 1,\n      "_leafWithKeyCount": 1,\n      "_orgId": "testorg",\n      "_public": false,\n      "creator": "",\n      "datePublished": "",\n      "description": "co",\n      "educationalLevel": "",\n      "eleType": "lr",\n      "id": "7beda6ef-4568-421d-bba3-3db5ea94eaad",\n      "identifier": "",\n      "isPartOf": "testCollection",\n      "isPartOfId": "52093ec2-3308-4fd6-be5b-bc4ad32a1cf0",\n      "key": "https://palet.codes/key/5553C-10481C",\n      "leafCount": 1,\n      "leafWithKeyCount": 1,\n      "mainEntity": "test",\n      "mainEntityId": "5a0ecf28-9ba2-42aa-8dea-273572987614",\n      "name": "crazy",\n      "provenance": "",\n      "sdDatePublished": "",\n      "subject": "",\n      "url": "urn:test"\n    },\n    "statements": {\n      "id": "5553",\n      "int": "Intentional",\n      "rel": "Central",\n      "statement": "Defining the trigonometric ratios sine (sin), cosine (cos) and tangent (tan) in terms of the sides of a right triangle.",\n      "stmtType": "STFk"\n    }\n}\n\nresponse = requests.post(url, json=data, headers=headers)\nprint(response.json())\n'})})})]}),"\n",(0,r.jsx)(n.h3,{id:"response-2",children:"Response"}),"\n",(0,r.jsx)(n.h4,{id:"response-parameters-2",children:"Response Parameters"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"id"})}),(0,r.jsx)(n.td,{children:"uuid"}),(0,r.jsx)(n.td,{children:"UUID for comment about specific Palet statement(s)."})]})})]}),"\n",(0,r.jsx)(n.h4,{id:"example-response-2",children:"Example Response"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "id": "comment123"\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"put---update-comment",children:"PUT - Update Comment"}),"\n",(0,r.jsx)(n.h3,{id:"endpoint-3",children:"Endpoint"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"PUT https://matchmakeredlabs.net/api/comments/{commentId}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"notes-1",children:"Notes"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Allowed to update a specific comment by UUID if caller has system-wide admin ",(0,r.jsx)(n.code,{children:"ReadDescriptor"})," privilege (for now)"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"request-3",children:"Request"}),"\n",(0,r.jsx)(n.h4,{id:"request-body-1",children:"Request Body"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "id": "comment123"\n  "comment": "This is an updated sample comment",\n  "commentAbout": "paletStatements",\n  "descriptor": {\n    "_canUpdate": true,\n    "_isLeaf": true,\n    "_leafCount": 1,\n    "_leafWithKeyCount": 1,\n    "_orgId": "testorg",\n    "_public": false,\n    "creator": "",\n    "datePublished": "",\n    "description": "co",\n    "educationalLevel": "",\n    "eleType": "lr",\n    "id": "7beda6ef-4568-421d-bba3-3db5ea94eaad",\n    "identifier": "",\n    "isPartOf": "testCollection",\n    "isPartOfId": "52093ec2-3308-4fd6-be5b-bc4ad32a1cf0",\n    "key": "https://palet.codes/key/5553C-10481C",\n    "leafCount": 1,\n    "leafWithKeyCount": 1,\n    "mainEntity": "test",\n    "mainEntityId": "5a0ecf28-9ba2-42aa-8dea-273572987614",\n    "name": "crazy",\n    "provenance": "",\n    "sdDatePublished": "",\n    "subject": "",\n    "url": "urn:test"\n  },\n  "statements": [\n    {\n      "id": "5553",\n      "int": "Intentional",\n      "rel": "Central",\n      "statement": "Defining the trigonometric ratios sine (sin), cosine (cos) and tangent (tan) in terms of the sides of a right triangle.",\n      "stmtType": "STFk"\n    },\n    {\n      "id": "5554",\n      "int": "Intentional",\n      "rel": "Central",\n      "statement": "New Statement",\n      "stmtType": "STFk"\n    }\n  ]\n}\n'})}),"\n",(0,r.jsx)(n.h4,{id:"request-parameters-2",children:"Request Parameters"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Required"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"id"})}),(0,r.jsx)(n.td,{children:"uuid/string"}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsx)(n.td,{children:"UUID/string ID for existing comment about specific Palet statement(s)."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"comment"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsx)(n.td,{children:"The information provided in the comment"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"commentAbout"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsx)(n.td,{children:"Always paletStatements (for now)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"descriptor"})}),(0,r.jsx)(n.td,{children:"object"}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsx)(n.td,{children:"Array of user/group IDs"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"statements"})}),(0,r.jsx)(n.td,{children:"array"}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsx)(n.td,{children:"Palet statements that this comment is about"})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"sample-request-3",children:"Sample Request"}),"\n",(0,r.jsxs)(i.A,{groupId:"update_comment",defaultValue:"curl",values:[{label:"cURL",value:"curl"},{label:"JavaScript",value:"js"},{label:"Python",value:"python"}],children:[(0,r.jsx)(d.A,{value:"curl",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-curl",children:'curl \\\n-H "Authorization: Bearer $TOKEN" \\\n-H "Content-Type: application/json" \\\n-d \'{\n      "id":"5cb99bf1-8344-46de-b14d-0a798fbf26fa"\n      "commemt":"test",\n      "commentAbout":"paletStatements",\n      "descriptor": {\n        "_canUpdate": true,\n        "_isLeaf": true,\n        "_leafCount": 1,\n        "_leafWithKeyCount": 1,\n        "_orgId": "testorg",\n        "_public": false,\n        "creator": "",\n        "datePublished": "",\n        "description": "co",\n        "educationalLevel": "",\n        "eleType": "lr",\n        "id": "7beda6ef-4568-421d-bba3-3db5ea94eaad",\n        "identifier": "",\n        "isPartOf": "testCollection",\n        "isPartOfId": "52093ec2-3308-4fd6-be5b-bc4ad32a1cf0",\n        "key": "https://palet.codes/key/5553C-10481C",\n        "leafCount": 1,\n        "leafWithKeyCount": 1,\n        "mainEntity": "test",\n        "mainEntityId": "5a0ecf28-9ba2-42aa-8dea-273572987614",\n        "name": "crazy",\n        "provenance": "",\n        "sdDatePublished": "",\n        "subject": "",\n        "url": "urn:test"\n      },\n      "statements": {\n        "id": "5553",\n        "int": "Intentional",\n        "rel": "Central",\n        "statement": "Defining the trigonometric ratios sine (sin), cosine (cos) and tangent (tan) in terms of the sides of a right triangle.",\n        "stmtType": "STFk"\n      }}\' \\\n-X PUT "https://matchmakeredlabs.net/api/comments/5cb99bf1-8344-46de-b14d-0a798fbf26fa"\n'})})}),(0,r.jsx)(d.A,{value:"js",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'async function updateComment(commentId) {\n    const response = await fetch(`https://matchmakeredlabs.net/api/comments/${commentId}`, {\n        method: "PUT",\n        headers: {\n            \'Content-Type\': \'application/json\',\n            \'Authorization\': `Bearer ${TOKEN}`\n        },\n        body: JSON.stringify({\n            id: commentId,\n            comment: "test",\n            commentAbout: "paletStatements",\n            descriptor: {\n              _canUpdate: true,\n              _isLeaf: true,\n              _leafCount: 1,\n              _leafWithKeyCount: 1,\n              _orgId: "testorg",\n              _public: false,\n              creator: "",\n              datePublished: "",\n              description: "co",\n              educationalLevel: "",\n              eleType: "lr",\n              id: "7beda6ef-4568-421d-bba3-3db5ea94eaad",\n              identifier: "",\n              isPartOf: "testCollection",\n              isPartOfId: "52093ec2-3308-4fd6-be5b-bc4ad32a1cf0",\n              key: "https://palet.codes/key/5553C-10481C",\n              leafCount: 1,\n              leafWithKeyCount: 1,\n              mainEntity: "test",\n              mainEntityId: "5a0ecf28-9ba2-42aa-8dea-273572987614",\n              name: "crazy",\n              provenance: "",\n              sdDatePublished: "",\n              subject: "",\n              url: "urn:test"\n            },\n            statements: {\n              id: "5553",\n              int: "Intentional",\n              rel: "Central",\n              statement: "Defining the trigonometric ratios sine (sin), cosine (cos) and tangent (tan) in terms of the sides of a right triangle.",\n              stmtType: "STFk"\n            }\n        })\n    });\n    return response.json();\n}\n\nupdateComment("comment123").then(data => console.log(data));\n'})})}),(0,r.jsx)(d.A,{value:"python",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'import requests\n\ntoken = "<your_token>"\ncomment_id = "comment_123"\nurl = f\'https://matchmakeredlabs.net/api/comments/{comment_id}\'\nheaders = {\n    \'Content-Type\': \'application/json\',\n    \'Authorization\': f"Bearer {token}"\n}\ndata = {\n    "id": "5cb99bf1-8344-46de-b14d-0a798fbf26fa",\n    "comment": "test",\n    "commentAbout": "paletStatements",\n    "descriptor": {\n      "_canUpdate": true,\n      "_isLeaf": true,\n      "_leafCount": 1,\n      "_leafWithKeyCount": 1,\n      "_orgId": "testorg",\n      "_public": false,\n      "creator": "",\n      "datePublished": "",\n      "description": "co",\n      "educationalLevel": "",\n      "eleType": "lr",\n      "id": "7beda6ef-4568-421d-bba3-3db5ea94eaad",\n      "identifier": "",\n      "isPartOf": "testCollection",\n      "isPartOfId": "52093ec2-3308-4fd6-be5b-bc4ad32a1cf0",\n      "key": "https://palet.codes/key/5553C-10481C",\n      "leafCount": 1,\n      "leafWithKeyCount": 1,\n      "mainEntity": "test",\n      "mainEntityId": "5a0ecf28-9ba2-42aa-8dea-273572987614",\n      "name": "crazy",\n      "provenance": "",\n      "sdDatePublished": "",\n      "subject": "",\n      "url": "urn:test"\n    },\n    "statements": {\n      "id": "5553",\n      "int": "Intentional",\n      "rel": "Central",\n      "statement": "Defining the trigonometric ratios sine (sin), cosine (cos) and tangent (tan) in terms of the sides of a right triangle.",\n      "stmtType": "STFk"\n    }\n}\n\nresponse = requests.put(url, json=data, headers=headers)\nprint(response.json())\n'})})})]}),"\n",(0,r.jsx)(n.h3,{id:"response-3",children:"Response"}),"\n",(0,r.jsx)(n.h4,{id:"response-parameters-3",children:"Response Parameters"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"id"})}),(0,r.jsx)(n.td,{children:"uuid"}),(0,r.jsx)(n.td,{children:"UUID for comment about specific Palet statement(s)."})]})})]}),"\n",(0,r.jsx)(n.h4,{id:"example-response-3",children:"Example Response"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "id": "comment123"\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"delete---remove-comment",children:"DELETE - Remove Comment"}),"\n",(0,r.jsx)(n.h3,{id:"endpoint-4",children:"Endpoint"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"DELETE https://matchmakeredlabs.net/api/comments/{commentId}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"notes-2",children:"Notes"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Allowed to update a specific comment by UUID if caller has system-wide admin ",(0,r.jsx)(n.code,{children:"ReadDescriptor"})," privilege (for now)"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"request-4",children:"Request"}),"\n",(0,r.jsx)(n.h4,{id:"path-parameters-1",children:"Path Parameters"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Required"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"commentId"})}),(0,r.jsx)(n.td,{children:"uuid"}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsx)(n.td,{children:"UUID of a specific comment about a Palet statement."})]})})]}),"\n",(0,r.jsx)(n.h4,{id:"sample-request-4",children:"Sample Request"}),"\n",(0,r.jsxs)(i.A,{groupId:"delete_comment",defaultValue:"curl",values:[{label:"cURL",value:"curl"},{label:"JavaScript",value:"js"},{label:"Python",value:"python"}],children:[(0,r.jsx)(d.A,{value:"curl",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-curl",children:'curl \\\n-H "Authorization: Bearer $TOKEN" \\\n-X DELETE "https://matchmakeredlabs.net/api/comments/comment123"\n'})})}),(0,r.jsx)(d.A,{value:"js",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'async function deleteComment(commentId) {\n    const response = await fetch(`https://matchmakeredlabs.net/api/comments/${commentId}`, {\n        method: "DELETE",\n        headers: {\n            \'Authorization\': `Bearer ${TOKEN}`\n        }\n    });\n    return response.json();\n}\n\ndeleteComment("comment123").then(data => console.log(data));\n'})})}),(0,r.jsx)(d.A,{value:"python",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'import requests\n\ntoken = "<your_token>"\ncomment_id = "comment123"\nurl = f\'https://matchmakeredlabs.net/api/comments/{comment_id}\'\nheaders = {\n    \'Authorization\': f"Bearer {token}"\n}\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n'})})})]}),"\n",(0,r.jsx)(n.h3,{id:"response-4",children:"Response"}),"\n",(0,r.jsx)(n.h4,{id:"response-parameters-4",children:"Response Parameters"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"id"})}),(0,r.jsx)(n.td,{children:"uuid"}),(0,r.jsx)(n.td,{children:"UUID for comment about specific Palet statement(s)."})]})})]}),"\n",(0,r.jsx)(n.h4,{id:"example-response-4",children:"Example Response"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "id": "comment123"\n}\n'})})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}},1470:(e,n,t)=>{t.d(n,{A:()=>C});var s=t(6540),r=t(4164),a=t(3104),i=t(6347),d=t(205),l=t(7485),c=t(1682),o=t(679);function h(e){return s.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function m(e){const{values:n,children:t}=e;return(0,s.useMemo)(()=>{const e=n??function(e){return h(e).map(({props:{value:e,label:n,attributes:t,default:s}})=>({value:e,label:n,attributes:t,default:s}))}(t);return function(e){const n=(0,c.XI)(e,(e,n)=>e.value===n.value);if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,t])}function u({value:e,tabValues:n}){return n.some(n=>n.value===e)}function p({queryString:e=!1,groupId:n}){const t=(0,i.W6)(),r=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,l.aZ)(r),(0,s.useCallback)(e=>{if(!r)return;const n=new URLSearchParams(t.location.search);n.set(r,e),t.replace({...t.location,search:n.toString()})},[r,t])]}function j(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,a=m(e),[i,l]=(0,s.useState)(()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!u({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const t=n.find(e=>e.default)??n[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:a})),[c,h]=p({queryString:t,groupId:r}),[j,x]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[t,r]=(0,o.Dv)(n);return[t,(0,s.useCallback)(e=>{n&&r.set(e)},[n,r])]}({groupId:r}),f=(()=>{const e=c??j;return u({value:e,tabValues:a})?e:null})();(0,d.A)(()=>{f&&l(f)},[f]);return{selectedValue:i,selectValue:(0,s.useCallback)(e=>{if(!u({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);l(e),h(e),x(e)},[h,x,a]),tabValues:a}}var x=t(2303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=t(4848);function y({className:e,block:n,selectedValue:t,selectValue:s,tabValues:i}){const d=[],{blockElementScrollPositionUntilNextRender:l}=(0,a.a_)(),c=e=>{const n=e.currentTarget,r=d.indexOf(n),a=i[r].value;a!==t&&(l(n),s(a))},o=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=d.indexOf(e.currentTarget)+1;n=d[t]??d[0];break}case"ArrowLeft":{const t=d.indexOf(e.currentTarget)-1;n=d[t]??d[d.length-1];break}}n?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":n},e),children:i.map(({value:e,label:n,attributes:s})=>(0,b.jsx)("li",{role:"tab",tabIndex:t===e?0:-1,"aria-selected":t===e,ref:e=>{d.push(e)},onKeyDown:o,onClick:c,...s,className:(0,r.A)("tabs__item",f.tabItem,s?.className,{"tabs__item--active":t===e}),children:n??e},e))})}function g({lazy:e,children:n,selectedValue:t}){const a=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=a.find(e=>e.props.value===t);return e?(0,s.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:a.map((e,n)=>(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==t}))})}function v(e){const n=j(e);return(0,b.jsxs)("div",{className:(0,r.A)("tabs-container",f.tabList),children:[(0,b.jsx)(y,{...n,...e}),(0,b.jsx)(g,{...n,...e})]})}function C(e){const n=(0,x.A)();return(0,b.jsx)(v,{...e,children:h(e.children)},String(n))}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>d});var s=t(6540);const r={},a=s.createContext(r);function i(e){const n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(a.Provider,{value:n},e.children)}},9365:(e,n,t)=>{t.d(n,{A:()=>i});t(6540);var s=t(4164);const r={tabItem:"tabItem_Ymn6"};var a=t(4848);function i({children:e,hidden:n,className:t}){return(0,a.jsx)("div",{role:"tabpanel",className:(0,s.A)(r.tabItem,t),hidden:n,children:e})}}}]);